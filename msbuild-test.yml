parameters:
- name: 'testId'
  type: string
- name: 'testName'
  type: string
- name: 'testTasks'
  type: stepList 

jobs:
- job: ${{ parameters.testId }}_test
  displayName: ${{ parameters.testName }}

  strategy:
    matrix:
      VSEng-Xamarin-RedmondMacBuildPool-iOS-Trusted:
        poolName: 'VSEng-Xamarin-RedmondMacBuildPool-iOS-Trusted'
        imageName: 
      macos-latest:
        poolName: 
        imageName: 'macOS-latest'
      macos-13:
        poolName: 
        imageName: 'macOS-13'
      macos-14:
        poolName: 
        imageName: 'macOS-14'
      windows-latest:
        poolName: 
        imageName: 'windows-latest'
  pool:
    name: $(poolName)
    vmImage: $(imageName)

  steps:
    - pwsh: |
        echo 'Arrange'
      displayName: '===> Arrange  <==='
      timeoutInMinutes: 1

    - checkout: self
      clean: true

    - task: UseDotNet@2
      displayName: 'dotnet version'
      inputs:
        version: 8.0.x
        performMultiLevelLookup: true
        includePreviewVersions: true

    - task: NuGetAuthenticate@1
      inputs:
        forceReinstallCredentialProvider: true

    - task: DotNetCoreCLI@2
      displayName: 'dotnet workload restore '
      inputs:
        command: 'custom'
        custom: 'workload'
        arguments: 'install maui macos maccatalyst tvos ios'

    - pwsh: |
        mkdir -p $(Build.SourcesDirectory)/test/maui
        dotnet new maui -n maui-test -o $(Build.SourcesDirectory)/test/maui
      displayName: 'Create test project'

    - pwsh: |
        echo 'Act'
      displayName: '===>    Act   <==='
      timeoutInMinutes: 1

    - ${{ each task in parameters.testTasks }}:
      - ${{ each pair in task }}:
          ${{ pair.key }}: ${{ pair.value }}    

    - pwsh: |
        echo 'Assert'
      displayName: '===>  Assert  <==='
      timeoutInMinutes: 1

    - pwsh: |
        gci env: | Format-Table
      displayName: 'List environment variables'

    - pwsh: |
        if ($env:GETPROPERTY_OUTPUT -ne "net8.0-android;net8.0-ios;net8.0-maccatalyst") { throw "Expected 'net8.0-android;net8.0-ios;net8.0-maccatalyst' but got '$env:cmdOutput'" }
      displayName: 'Verify output is "net8.0-android;net8.0-ios;net8.0-maccatalyst" '
